import streamlit as st
import pandas as pd
import numpy as np
import joblib

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
linear_model = joblib.load("models/linear_regression_model.pkl")
rf_model = joblib.load("models/random_forest_model.pkl")
scaler = joblib.load("models/scaler.pkl")
feature_columns = joblib.load("models/feature_columns.pkl")  # ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ Features ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ï‡∏≠‡∏ô Train

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤ UI
st.title("üè° House Price Prediction Demo")
st.markdown("### üìà ‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏ï‡πà‡∏≤‡∏á ‡πÜ")

# ‚úÖ UI Layout ‡πÅ‡∏ö‡∏ö 2 Columns ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô
col1, col2 = st.columns(2)

# ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Input Fields ‡∏ï‡∏≤‡∏° Feature ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Train
input_values = {}
for i, col in enumerate(feature_columns):
    if i % 2 == 0:
        with col1:
            input_values[col] = st.number_input(f"{col}", min_value=0, max_value=10000, value=100)
    else:
        with col2:
            input_values[col] = st.number_input(f"{col}", min_value=0, max_value=10000, value=100)

# ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤
st.markdown("---")  # ‡πÄ‡∏™‡πâ‡∏ô‡∏Ñ‡∏±‡πà‡∏ô
if st.button("üöÄ **Predict House Price**"):
    # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å UI
    input_data = pd.DataFrame([input_values])
    st.write("üîπ **‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å UI:**")
    st.dataframe(input_data.style.format("{:.2f}"))

    # ‚úÖ ‡∏ó‡∏≥ Standard Scaling
    try:
        input_scaled = scaler.transform(input_data)
        st.write("üîπ **‡∏Ñ‡πà‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Scaling:**")
        st.dataframe(pd.DataFrame(input_scaled, columns=feature_columns).style.format("{:.2f}"))

        # ‚úÖ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤
        pred_linear = linear_model.predict(input_scaled)[0]
        pred_rf = rf_model.predict(input_scaled)[0]

        # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        st.markdown("### üéØ **Prediction Results**")
        st.info(f"üè° **Linear Regression Prediction:** ${pred_linear:,.2f}")
        st.success(f"üå≤ **Random Forest Prediction:** ${pred_rf:,.2f}")

    except Exception as e:
        st.error(f"‚ö†Ô∏è Error: {e}")
